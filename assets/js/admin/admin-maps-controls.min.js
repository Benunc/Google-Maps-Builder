/**
 *  Maps Directions
 *
 *  @description: Adds directions functionality to the maps builder
 *  @copyright: http://opensource.org/licenses/gpl-2.0.php GNU Public License
 *  @since: 2.0
 */
var gmb_data,gmb_upload_marker,trafficLayer=new google.maps.TrafficLayer,transitLayer=new google.maps.TransitLayer,bicycleLayer=new google.maps.BicyclingLayer,placeSearchAutocomplete;!function(e){"use strict";/**
	 * Goto Location Autocomplete
	 *
	 */
function a(){var a=e(".map-autocomplete-wrap"),t=e("#map-location-autocomplete").get(0),n=new google.maps.places.Autocomplete(t);n.bindTo("bounds",map),google.maps.event.addListener(n,"place_changed",function(){var t=n.getPlace();
// If the place has a geometry, then present it on a map.
//Close modal
return t.geometry?(t.geometry.viewport?map.fitBounds(t.geometry.viewport):(map.setCenter(t.geometry.location),map.setZoom(17)),e(a).find(".mfp-close").trigger("click"),void o(a)):void window.alert("Autocomplete's returned place contains no geometry")}),
//Tame the enter key to not save the widget while using the autocomplete input
google.maps.event.addDomListener(t,"keydown",function(e){13==e.keyCode&&e.preventDefault()})}/**
	 * Close a Modal within Modal
	 *
	 * @param modal
	 */
function o(a){
// Move back out of container
e(a).addClass("mfp-hide").appendTo(".modal-placeholder").unwrap()}/**
	 * Set Map Edit Title within Modal
	 *
	 */
function t(){e("button.edit-title").on("click",function(){
// Move back out of container
e("input#title").before('<div class="title-placeholder"></div>').appendTo(".map-title-wrap .inner-modal")}),
//Add close functionality to outside overlay
e(".map-title-wrap").on("click",function(a){console.log(e(a.target)),console.log(e(a.target).hasClass("inner-modal-wrap")),
//only on overlay
(e(a.target).hasClass("inner-modal-wrap")||e(a.target).hasClass("inner-modal-container"))&&
// Move back out of title container back to title space
e(this).find("input#title").appendTo(".title-placeholder").unwrap()})}/**
	 * Kick it off on Window Load
	 */
e(window).on("load",function(){a(),t(),
//Initialize Magnific/Modal Functionality Too
e("body").on("click",".gmb-magnific-inline",function(a){a.preventDefault();var t="."+e(this).data("target");//target element class name
//Modal in modal?
//We can't have a magnific inside magnific so CSS3 modal it is
e.magnificPopup.instance.isOpen===!0?(
//Open CSS modal
e(t).before('<div class="modal-placeholder"></div>').removeClass("mfp-hide").appendTo(".magnific-builder #poststuff"),// Move the element to container
//Add close functionality to outside overlay
e(t).on("click",function(a){
//only on overlay
(e(a.target).hasClass("inner-modal-wrap")||e(a.target).hasClass("inner-modal-container"))&&
// Move back out of container
o(t)}),
//Close button
e(".gmb-modal-close").on("click",function(){o(t)})):e.magnificPopup.open({items:{src:e(t),type:"inline"},midClick:!0})})})}(jQuery);